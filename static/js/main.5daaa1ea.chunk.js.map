{"version":3,"sources":["components/resume/day/dayResume.jsx","actions/index.js","actions/actionTypes.js","components/resume/dropdownStates/dropdownStates.jsx","components/resume/dropdownYears/dropdownYears.jsx","utils/datesUtil.js","components/resume/resume.jsx","components/details/detail.jsx","App.js","reducers/statesReducer.js","reducers/yearReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["DayResume","className","this","props","date","name","dayofweek","Component","updateState","value","type","currentState","updateYear","currentYear","DropdownStates","changeCurrentState","e","setState","target","state","onChange","connect","dispatch","bindActionCreators","DropdownYears","Date","getFullYear","getYears","years","index","push","key","GetDates","year","easter","a","b","Math","floor","c","d","f","g","h","i","L","m","month","day","GetDateEaster","hollidays","nationalHollidays","map","holliday","MMDD","TransformDDMMToMMDD","numberOfTheWeek","getDay","GetDateOfTheWeek","data","statesHollidays","states","GetStateHollidays","undefined","y","easterDay","sumDate","DecreaseDays","getDate","toString","TwoDigit","getMonth","GetCarnavalDateRioDeJaneiro","currentDay","days","replace","setDate","AddDays","GetCorpusChristiDate","GetCarnavalDate","sort","aa","split","reverse","join","bb","OrderDays","acre","require","alagoas","amapa","amazonas","bahia","ceara","distritoFederal","espiritoSanto","goias","maranhao","matoGrosso","matoGrossoDoSul","minasGerais","para","paraiba","parana","pernambuco","piaui","rioDeJaneiro","rioGrandeDoNorte","rioGrandeDoSul","rondonia","santaCatarina","saoPaulo","sergipe","dayAndMonth","array","number","Resume","id","getDaysResume","element","store","statesReducer","yearReducer","Detail","getInformations","details","information","dangerouslySetInnerHTML","__html","App","initialState","Reducers","combineReducers","action","Store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5daaa1ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nclass DayResume extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"day-resume\">\r\n        <header className=\"day-month\"><strong>{this.props.date}</strong></header>\r\n        <div className=\"holiday\">{this.props.name}</div>\r\n        <footer className=\"day-of-week\">{this.props.dayofweek}</footer>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DayResume;\r\n","import {\r\n    STATE_UPDATE_VALUE,\r\n    YEAR_UPDATE_VALUE\r\n} from './actionTypes';\r\n\r\nexport const updateState = value => ({\r\n    type: STATE_UPDATE_VALUE,\r\n    currentState: value\r\n});\r\n\r\nexport const updateYear = value => ({\r\n    type: YEAR_UPDATE_VALUE,\r\n    currentYear: value\r\n});","export const STATE_UPDATE_VALUE = 'STATE_UPDATE_VALUE';\r\nexport const YEAR_UPDATE_VALUE = 'YEAR_UPDATE_VALUE';","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateState } from \"../../../actions\";\r\n\r\nclass DropdownStates extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentState: \"national\",\r\n    };\r\n  }\r\n\r\n  changeCurrentState = (e) => {\r\n    this.setState({ currentState: e.target.value }, () =>\r\n      this.props.updateState(this.state.currentState)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        className=\"dropdown-select\"\r\n        onChange={this.changeCurrentState}\r\n      >\r\n        <option value=\"national\">Nacional</option>\r\n        <option value=\"acre\">Acre</option>\r\n        <option value=\"alagoas\">Alagoas</option>\r\n        <option value=\"amapa\">Amapá</option>\r\n        <option value=\"amazonas\">Amazonas</option>\r\n        <option value=\"bahia\">Bahia</option>\r\n        <option value=\"ceara\">Ceará</option>\r\n        <option value=\"distritoFederal\">Distrito Federal</option>\r\n        <option value=\"espiritoSanto\">Espírito Santo</option>\r\n        <option value=\"goias\">Goiás</option>\r\n        <option value=\"maranhao\">Maranhão</option>\r\n        <option value=\"matoGrosso\">Mato Grosso</option>\r\n        <option value=\"MatoGrossoDoSul\">Mato Grosso do Sul</option>\r\n        <option value=\"minasGerais\">Minas Gerais</option>\r\n        <option value=\"para\">Pará</option>\r\n        <option value=\"paraiba\">Paraíba</option>\r\n        <option value=\"parana\">Paraná</option>\r\n        <option value=\"pernambuco\">Pernambuco</option>\r\n        <option value=\"piaui\">Piauí</option>\r\n        <option value=\"rioDeJaneiro\">Rio de Janeiro</option>\r\n        <option value=\"rioGrandeDoNorte\">Rio Grande do Norte</option>\r\n        <option value=\"rioGrandeDoSul\">Rio Grande do Sul</option>\r\n        <option value=\"rondonia\">Rondônia</option>\r\n        <option value=\"roraima\">Roraima</option>\r\n        <option value=\"santaCatarina\">Santa Catarina</option>\r\n        <option value=\"saoPaulo\">São Paulo</option>\r\n        <option value=\"sergipe\">Sergipe</option>\r\n        <option value=\"tocantins\">Tocantins</option>\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ updateState }, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(DropdownStates);\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateYear } from \"../../../actions\";\r\n\r\nclass DropdownYears extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentState: new Date().getFullYear(),\r\n    };\r\n  }\r\n\r\n  changeCurrentState = (e) => {\r\n    this.setState({ currentState: e.target.value }, () =>\r\n      this.props.updateYear(this.state.currentState)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select className=\"dropdown-year\" onChange={this.changeCurrentState}>\r\n        {this.getYears()}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  getYears() {\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    var years = [];\r\n    for (let index = currentYear; index < (currentYear + 100); index++) {\r\n      years.push(<option key={index} value={index}>{index}</option>);\r\n    }\r\n\r\n    return years;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ updateYear }, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(DropdownYears);\r\n","import nationalHollidays from '../json/national.json';\r\n\r\nexport default function GetDates(currentState, currentYear) {\r\n    const year = currentYear;\r\n    const easter = GetDateEaster(currentYear);\r\n\r\n    const hollidays = nationalHollidays.map(holliday => {\r\n        const MMDD = TransformDDMMToMMDD(holliday[\"day\"]);\r\n        const numberOfTheWeek = new Date(`${MMDD}/${year}`).getDay();\r\n        holliday[\"day-of-week\"] = GetDateOfTheWeek(numberOfTheWeek);\r\n        return holliday;\r\n    });\r\n\r\n    var data = [];\r\n    for (var i in hollidays)\r\n        data.push(hollidays[i]);\r\n\r\n    var statesHollidays = GetStateHollidays(currentState);\r\n    if (statesHollidays !== undefined) {\r\n        for (var y in statesHollidays) {\r\n            const MMDD = TransformDDMMToMMDD(statesHollidays[y][\"day\"]);\r\n            const numberOfTheWeek = new Date(`${MMDD}/${year}`).getDay();\r\n            statesHollidays[y][\"day-of-week\"] = GetDateOfTheWeek(numberOfTheWeek);\r\n            data.push(statesHollidays[y]);\r\n        }\r\n    }\r\n\r\n    if (currentState === \"rioDeJaneiro\")\r\n        data.push(GetCarnavalDateRioDeJaneiro(easter, currentYear));\r\n\r\n    data.push(GetCorpusChristiDate(easter, currentYear));\r\n    data.push(GetCarnavalDate(easter, currentYear));\r\n\r\n    return OrderDays(data);\r\n}\r\n\r\nconst states = {\r\n    acre: require('../json/states/acre.json'),\r\n    alagoas: require('../json/states/alagoas.json'),\r\n    amapa: require('../json/states/amapa.json'),\r\n    amazonas: require('../json/states/amazonas.json'),\r\n    bahia: require('../json/states/bahia.json'),\r\n    ceara: require('../json/states/ceara.json'),\r\n    distritoFederal: require('../json/states/distritoFederal.json'),\r\n    espiritoSanto: require('../json/states/espiritoSanto.json'),\r\n    goias: require('../json/states/goias.json'),\r\n    maranhao: require('../json/states/acre.json'),\r\n    matoGrosso: require('../json/states/acre.json'),\r\n    matoGrossoDoSul: require('../json/states/matoGrossoDoSul.json'),\r\n    minasGerais: require('../json/states/minasGerais.json'),\r\n    para: require('../json/states/para.json'),\r\n    paraiba: require('../json/states/paraiba.json'),\r\n    parana: require('../json/states/parana.json'),\r\n    pernambuco: require('../json/states/pernambuco.json'),\r\n    piaui: require('../json/states/piaui.json'),\r\n    rioDeJaneiro: require('../json/states/rioDeJaneiro.json'),\r\n    rioGrandeDoNorte: require('../json/states/rioGrandeDoNorte.json'),\r\n    rioGrandeDoSul: require('../json/states/rioGrandeDoSul.json'),\r\n    rondonia: require('../json/states/rondonia.json'),\r\n    santaCatarina: require('../json/states/santaCatarina.json'),\r\n    saoPaulo: require('../json/states/saoPaulo.json'),\r\n    sergipe: require('../json/states/sergipe.json'),\r\n};\r\n\r\nfunction GetStateHollidays(currentState) {\r\n    if (currentState !== \"national\")\r\n        return states[currentState];\r\n}\r\n\r\nfunction OrderDays(hollidays) {\r\n    return hollidays.sort(function (a, b) {\r\n        var aa = a.day.split('/').reverse().join(),\r\n            bb = b.day.split('/').reverse().join();\r\n        return aa < bb ? -1 : (aa > bb ? 1 : 0);\r\n    });\r\n}\r\n\r\nfunction TransformDDMMToMMDD(dayAndMonth) {\r\n    const array = dayAndMonth.split(\"/\");\r\n    const MMDD = `${array[1]}/${array[0]}`;\r\n    return MMDD;\r\n}\r\n\r\nfunction GetDateOfTheWeek(day) {\r\n    switch (day) {\r\n        case 0:\r\n            return \"Domingo\";\r\n        case 1:\r\n            return \"Segunda\";\r\n        case 2:\r\n            return \"Terça\";\r\n        case 3:\r\n            return \"Quarta\";\r\n        case 4:\r\n            return \"Quinta\";\r\n        case 5:\r\n            return \"Sexta\";\r\n        case 6:\r\n            return \"Sábado\";\r\n        default:\r\n            return day;\r\n    }\r\n}\r\n\r\nfunction GetDateEaster(currentYear) {\r\n    const year = currentYear;\r\n\r\n    const a = year % 19;\r\n    const b = Math.floor(year / 100);\r\n    const c = year % 100;\r\n    const d = Math.floor(b / 4);\r\n    const e = b % 4;\r\n    const f = Math.floor((b + 8) / 25);\r\n    const g = Math.floor((b - f + 1) / 3);\r\n    const h = (19 * a + b - d - g + 15) % 30;\r\n    const i = Math.floor(c / 4);\r\n    const k = c % 4;\r\n    const L = (32 + 2 * e + 2 * i - h - k) % 7;\r\n    const m = Math.floor((a + 11 * h + 22 * L) / 451);\r\n    const month = Math.floor((h + L - 7 * m + 114) / 31);\r\n    const day = 1 + (h + L - 7 * m + 114) % 31;\r\n\r\n    return `${month}-${day}-${year}`;\r\n}\r\n\r\nfunction GetCarnavalDate(easterDay, currentYear) {\r\n    const sumDate = DecreaseDays(easterDay, 47);\r\n\r\n    const day = sumDate.getDate().toString();\r\n    const month = TwoDigit(sumDate.getMonth() + 1);\r\n    const year = currentYear;\r\n\r\n    const numberOfTheWeek = new Date(`${month}/${day}/${year}`).getDay();\r\n    return {\r\n        \"day\": `${day}/${month}`,\r\n        \"name\": \"Carnaval\",\r\n        \"day-of-week\": GetDateOfTheWeek(numberOfTheWeek)\r\n    }\r\n}\r\n\r\nfunction GetCarnavalDateRioDeJaneiro(easterDay, currentYear) {\r\n    const sumDate = DecreaseDays(easterDay, 46);\r\n\r\n    const day = sumDate.getDate().toString();\r\n    const month = TwoDigit(sumDate.getMonth() + 1);\r\n    const year = currentYear;\r\n\r\n    const numberOfTheWeek = new Date(`${month}/${day}/${year}`).getDay();\r\n    return {\r\n        \"day\": `${day}/${month}`,\r\n        \"name\": \"Carnaval\",\r\n        \"day-of-week\": GetDateOfTheWeek(numberOfTheWeek)\r\n    }\r\n}\r\n\r\nfunction GetCorpusChristiDate(easterDay, currentYear) {\r\n    let sumDate = new Date();\r\n    sumDate = AddDays(easterDay, 60);\r\n\r\n    const day = sumDate.getDate().toString();\r\n    const month = TwoDigit(sumDate.getMonth() + 1);\r\n    const year = currentYear;\r\n\r\n    const numberOfTheWeek = new Date(`${month}/${day}/${year}`).getDay();\r\n    return {\r\n        \"day\": `${day}/${month}`,\r\n        \"name\": \"Corpus Christi\",\r\n        \"day-of-week\": GetDateOfTheWeek(numberOfTheWeek)\r\n    }\r\n}\r\n\r\nfunction TwoDigit(number) {\r\n    return number >= 10 ? number : \"0\" + number.toString();\r\n}\r\n\r\nfunction AddDays(currentDay, days) {\r\n    currentDay = currentDay.replace(\"-\", \"/\");\r\n    var date = new Date(currentDay);\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}\r\n\r\nfunction DecreaseDays(currentDay, days) {\r\n    currentDay = currentDay.replace(\"-\", \"/\");\r\n    var date = new Date(currentDay);\r\n    date.setDate(date.getDate() - days);\r\n    return date;\r\n}","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport DayResume from \"./day/dayResume\";\r\nimport DropdownStates from \"./dropdownStates/dropdownStates\";\r\nimport DropdownYears from \"./dropdownYears/dropdownYears\";\r\nimport GetDates from \"../../utils/datesUtil\";\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"resume\">\r\n        <label id=\"year-content\">\r\n          <h1 id=\"year\">\r\n            Feriados de <DropdownYears />\r\n          </h1>\r\n          <DropdownStates />\r\n        </label>\r\n        <div id=\"days\">{this.getDaysResume()}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getDaysResume() {\r\n    const { currentState, currentYear } = this.props;\r\n\r\n    return GetDates(currentState, currentYear).map((element, index) => {\r\n      return (\r\n        <DayResume\r\n          key={index}\r\n          date={element.day}\r\n          name={element.name}\r\n          dayofweek={element[\"day-of-week\"]}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentState: store.statesReducer.currentState,\r\n  currentYear: store.yearReducer.currentYear,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Resume);\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport details from \"../../json/details.json\";\r\n\r\nclass Detail extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"detail\">\r\n        <h2 id=\"title\">Explicação de cada Feriado</h2>\r\n        <ul className=\"list-information\">{this.getInformations()}</ul>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  getInformations() {\r\n    return details.map((information, index) => {\r\n      return (\r\n        <li\r\n          className=\"information\"\r\n          key={index}\r\n          dangerouslySetInnerHTML={{ __html: information }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport { Resume, Detail } from \"./components/\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Resume />\r\n        <Detail />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    STATE_UPDATE_VALUE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    currentState: 'national'\r\n};\r\n\r\nexport const statesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case STATE_UPDATE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentState: action.currentState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    YEAR_UPDATE_VALUE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    currentYear: new Date().getFullYear()\r\n};\r\n\r\nexport const yearReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case YEAR_UPDATE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentYear: action.currentYear\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    statesReducer\r\n} from \"./statesReducer\";\r\nimport {\r\n    yearReducer\r\n} from \"./yearReducer\";\r\nimport {\r\n    combineReducers\r\n} from \"redux\";\r\n\r\nexport const Reducers = combineReducers({\r\n    statesReducer: statesReducer,\r\n    yearReducer: yearReducer,\r\n});","import {\r\n    createStore\r\n} from 'redux';\r\nimport {\r\n    Reducers\r\n} from '../reducers';\r\n\r\nexport const Store = createStore(Reducers);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { Store } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}